#Workflow name
name: CI/CD Pipeline
on:
  #Manually trigger workflow runs
  workflow_dispatch:
  #Trigger the workflow on push from the main branch
  push:
    branches:
    - master
    - develop
      
env:
  #registry: docker.io
  imageRepository: "jhidalgo3/hello-kubernetes"
  DOCKER_CLI_EXPERIMENTAL: "enabled"

jobs:
  #Test's job
  ci:
    name: CI
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v4
      
      - name: Dotenv Action
        id: dotenv
        uses: falti/dotenv-action@v1.1.4

      #Run
      - name: Add COMMIT_ID env property with commit short sha
        run: | 
          echo "COMMIT_ID=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "version=${{ steps.dotenv.outputs.version }}.`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: tools - docker - login
        if: github.event_name == 'push'
        uses: docker/login-action@v3.3.0
        with:
          #registry: ${{ env.registry }}
          username: ${{ secrets.ES_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ES_DOCKERHUB_PAT }}

      - name: "docker - build and  push"
        if: github.event_name == 'push'
        run: |
          docker buildx build --push --platform linux/amd64 -t ${{env.imageRepository}}:${{env.version}}-amd64 -f Dockerfile .
          docker manifest create  ${{env.imageRepository}}:${{env.version}} ${{env.imageRepository}}:${{env.version}}-amd64
          docker manifest inspect ${{env.imageRepository}}:${{env.version}}
          docker manifest push    ${{env.imageRepository}}:${{env.version}}

      - name: helm - template chart
        run: | 
          helm package --destination .artifacts/helm --version ${{steps.dotenv.outputs.CHART_VERSION}} --app-version ${{env.version}} helm-chart
          cp .env .artifacts/helm
          ls -la .artifacts/helm

      - name: "artifacts - upload - helm chart"
        uses: actions/upload-artifact@v4
        with:
          name: helm
          path: .artifacts/helm

  cd:
    name: CD
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: tools - helm - install
        uses: azure/setup-helm@v4.2.0

      - name: tools - docker - login
        uses: docker/login-action@v3.3.0
        with:
          #registry: ${{ env.registry }}
          username: ${{ secrets.ES_DOCKERHUB_USERNAME }}
          password: ${{ secrets.ES_DOCKERHUB_PAT }}

      - name: artifacts - download - helm chart
        uses: actions/download-artifact@v4
        with:
          name: helm
          path: .artifacts/helm

      - name: Dotenv Action
        id: dotenv
        uses: falti/dotenv-action@v1.1.4
        with:
          path: .artifacts/helm/.env

      - name: github - checkout - helm-charts
        uses: actions/checkout@v4
        with:
          repository: jhidalgo3/helm-charts
          token:  ${{ secrets.ES_GITHUB_PAT }}
          path: helm-charts


      - name: github - publish - chart
        run: |
          mkdir -p helm-charts/charts
          cp .artifacts/helm/${{steps.dotenv.outputs.CHART}}-${{steps.dotenv.outputs.CHART_VERSION}}.tgz  helm-charts/charts

          cd helm-charts
          rm -f index.yaml
          helm repo index ./

          git config user.name "jhidalgo3"
          git config user.email "535765+jhidalgo3@users.noreply.github.com"
          git add .
          git status
          git commit -m "Added ${{steps.dotenv.outputs.CHART}}-${{steps.dotenv.outputs.CHART_VERSION}}.tgz"
          git push